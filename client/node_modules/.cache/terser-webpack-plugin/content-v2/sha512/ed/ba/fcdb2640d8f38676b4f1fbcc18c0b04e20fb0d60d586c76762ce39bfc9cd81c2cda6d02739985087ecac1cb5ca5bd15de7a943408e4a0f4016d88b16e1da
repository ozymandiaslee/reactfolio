{"map":"{\"version\":3,\"sources\":[\"C:\\\\Users\\\\raymo\\\\dev\\\\reactfolio\\\\client\\\\node_modules\\\\file-loader\\\\dist\\\\cjs.js??ref--6-oneOf-7!C:\\\\Users\\\\raymo\\\\dev\\\\reactfolio\\\\client\\\\src\\\\logo.svg\",\"C:/Users/raymo/dev/reactfolio/client/src/components/header.js\",\"C:/Users/raymo/dev/reactfolio/client/src/components/project-card.js\",\"C:/Users/raymo/dev/reactfolio/client/src/App.js\",\"C:/Users/raymo/dev/reactfolio/client/src/serviceWorker.js\",\"C:/Users/raymo/dev/reactfolio/client/src/index.js\"],\"names\":[\"module\",\"exports\",\"__webpack_require__\",\"p\",\"Header\",\"react_default\",\"a\",\"createElement\",\"className\",\"href\",\"ProjectCard\",\"props\",\"src\",\"img\",\"class\",\"alt\",\"name\",\"github\",\"deployed\",\"App\",\"Fragment\",\"header\",\"project_card\",\"Boolean\",\"window\",\"location\",\"hostname\",\"match\",\"ReactDOM\",\"render\",\"StrictMode\",\"src_App\",\"document\",\"getElementById\",\"navigator\",\"serviceWorker\",\"ready\",\"then\",\"registration\",\"unregister\",\"catch\",\"error\",\"console\",\"message\"],\"mappings\":\"mIAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,4HCWzBC,mBATA,WAAA,OACXC,EAAAC,EAAAC,cAAA,MAAA,CAAKC,UAAU,yBACXH,EAAAC,EAAAC,cAAA,KAAA,CAAIC,UAAU,aAAd,eACAH,EAAAC,EAAAC,cAAA,IAAA,CAAGC,UAAU,QAAb,gDACAH,EAAAC,EAAAC,cAAA,KAAA,CAAIC,UAAU,SACVH,EAAAC,EAAAC,cAAA,IAAA,KAAGF,EAAAC,EAAAC,cAAA,IAAA,CAAGE,KAAK,oCAAR,WAAH,MAA4DJ,EAAAC,EAAAC,cAAA,IAAA,CAAGE,KAAK,KAAR,gBCMzDC,EAXK,SAACC,GAAD,OAChBN,EAAAC,EAAAC,cAAA,MAAA,CAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,MAAA,CAAKK,IAAKD,EAAME,IAAKC,MAAM,eAAeC,IAAI,QAC1CV,EAAAC,EAAAC,cAAA,MAAA,CAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,KAAA,CAAIC,UAAU,cAAcG,EAAMK,MAClCX,EAAAC,EAAAC,cAAA,IAAA,CAAGE,KAAME,EAAMM,OAAQT,UAAU,mBAAjC,UACAH,EAAAC,EAAAC,cAAA,IAAA,CAAGE,KAAME,EAAMO,SAAUV,UAAU,mBAAnC,WCQDW,IAAAA,EAVf,WACE,OACEd,EAAAC,EAAAC,cAAAF,EAAAC,EAAAc,SAAA,KACAf,EAAAC,EAAAC,cAACc,EAAD,MACAhB,EAAAC,EAAAC,cAACe,EAAD,CAAaN,KAAK,cAAcH,IAAI,4BAA4BI,OAAO,gEAAgEC,SAAS,+CAChJb,EAAAC,EAAAC,cAACe,EAAD,CAAaN,KAAK,aAAaH,IAAI,4BAA4BI,OAAO,oDAAoDC,SAAS,uDCCnHK,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,EAAAA,EAASC,OACPxB,EAAAC,EAAAC,cAACF,EAAAC,EAAMwB,WAAP,KACEzB,EAAAC,EAAAC,cAACwB,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,KAAK,SAAAC,GACJA,EAAaC,eAEdC,MAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME\",\"sourcesContent\":[\"module.exports = __webpack_public_path__ + \\\"static/media/logo.5d5d9eef.svg\\\";\",\"import React from 'react';\\r\\n\\r\\nconst Header = () => (\\r\\n    <div className=\\\"jumbotron text-center\\\">\\r\\n        <h3 className=\\\"display-4\\\">Raymond Lee</h3>\\r\\n        <p className=\\\"lead\\\">(919)-280-0949 | raymondlee@kaffeinatenc.com</p>\\r\\n        <hr className=\\\"my-4\\\"></hr>\\r\\n            <p><a href=\\\"https://github.com/ozymandiaslee\\\"> GitHub</a> | <a href=\\\"/\\\">LinkedIn</a></p>\\r\\n    </div>\\r\\n);\\r\\n\\r\\nexport default Header;\",\"import React from 'react';\\r\\n\\r\\nconst ProjectCard = (props) => (\\r\\n    <div className=\\\"card\\\">\\r\\n        <img src={props.img} class=\\\"card-img-top\\\" alt=\\\"...\\\"></img>\\r\\n            <div className=\\\"card-body\\\">\\r\\n                <h5 className=\\\"card-title\\\">{props.name}</h5>\\r\\n                <a href={props.github} className=\\\"btn btn-primary\\\">GitHub</a>\\r\\n                <a href={props.deployed} className=\\\"btn btn-primary\\\">Link</a>\\r\\n            </div>\\r\\n    </div>\\r\\n);\\r\\n\\r\\nexport default ProjectCard;\",\"import React from 'react';\\nimport logo from './logo.svg';\\nimport './App.css';\\nimport Header from './components/header';\\nimport ProjectCard from './components/project-card'\\n\\nfunction App() {\\n  return (\\n    <>\\n    <Header />\\n    <ProjectCard name=\\\"RockClimber\\\" img=\\\"./assets/imgs/Capture.PNG\\\" github=\\\"https://github.com/Jack-Storment/North-Carolina-Rock-Climbing\\\" deployed=\\\"https://www.northcarolinarockclimbing.com/\\\" />\\n    <ProjectCard name=\\\"CryptoDash\\\" img=\\\"./assets/imgs/Capture.PNG\\\" github=\\\" https://github.com/travis-john/dolla-dolla-bills\\\" deployed=\\\" https://travis-john.github.io/dolla-dolla-bills\\\" />\\n    </>\\n      )\\n}\\n\\nexport default App;\\n\",\"// This optional code is used to register a service worker.\\n// register() is not called by default.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on subsequent visits to a page, after all the\\n// existing tabs open on the page have been closed, since previously cached\\n// resources are updated in the background.\\n\\n// To learn more about the benefits of this model and instructions on how to\\n// opt-in, read https://bit.ly/CRA-PWA\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.0/8 are considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport function register(config) {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl, config);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\\n          );\\n        });\\n      } else {\\n        // Is not localhost. Just register service worker\\n        registerValidSW(swUrl, config);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl, config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        if (installingWorker == null) {\\n          return;\\n        }\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the updated precached content has been fetched,\\n              // but the previous service worker will still serve the older\\n              // content until all client tabs are closed.\\n              console.log(\\n                'New content is available and will be used when all ' +\\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\\n              );\\n\\n              // Execute callback\\n              if (config && config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config && config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl, config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl, {\\n    headers: { 'Service-Worker': 'script' },\\n  })\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      const contentType = response.headers.get('content-type');\\n      if (\\n        response.status === 404 ||\\n        (contentType != null && contentType.indexOf('javascript') === -1)\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready\\n      .then(registration => {\\n        registration.unregister();\\n      })\\n      .catch(error => {\\n        console.error(error.message);\\n      });\\n  }\\n}\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport './index.css';\\nimport App from './App';\\nimport * as serviceWorker from './serviceWorker';\\n\\nReactDOM.render(\\n  <React.StrictMode>\\n    <App />\\n  </React.StrictMode>,\\n  document.getElementById('root')\\n);\\n\\n// If you want your app to work offline and load faster, you can change\\n// unregister() to register() below. Note this comes with some pitfalls.\\n// Learn more about service workers: https://bit.ly/CRA-PWA\\nserviceWorker.unregister();\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],[,,,function(e,a,t){e.exports=t(11)},,,,,function(e,a,t){},function(e,a,t){e.exports=t.p+\"static/media/logo.5d5d9eef.svg\"},function(e,a,t){},function(e,a,t){\"use strict\";t.r(a);var n=t(0),r=t.n(n),o=t(2),l=t.n(o),c=(t(8),t(9),t(10),function(){return r.a.createElement(\"div\",{className:\"jumbotron text-center\"},r.a.createElement(\"h3\",{className:\"display-4\"},\"Raymond Lee\"),r.a.createElement(\"p\",{className:\"lead\"},\"(919)-280-0949 | raymondlee@kaffeinatenc.com\"),r.a.createElement(\"hr\",{className:\"my-4\"}),r.a.createElement(\"p\",null,r.a.createElement(\"a\",{href:\"https://github.com/ozymandiaslee\"},\" GitHub\"),\" | \",r.a.createElement(\"a\",{href:\"/\"},\"LinkedIn\")))}),i=function(e){return r.a.createElement(\"div\",{className:\"card\"},r.a.createElement(\"img\",{src:e.img,class:\"card-img-top\",alt:\"...\"}),r.a.createElement(\"div\",{className:\"card-body\"},r.a.createElement(\"h5\",{className:\"card-title\"},e.name),r.a.createElement(\"a\",{href:e.github,className:\"btn btn-primary\"},\"GitHub\"),r.a.createElement(\"a\",{href:e.deployed,className:\"btn btn-primary\"},\"Link\")))};var m=function(){return r.a.createElement(r.a.Fragment,null,r.a.createElement(c,null),r.a.createElement(i,{name:\"RockClimber\",img:\"./assets/imgs/Capture.PNG\",github:\"https://github.com/Jack-Storment/North-Carolina-Rock-Climbing\",deployed:\"https://www.northcarolinarockclimbing.com/\"}),r.a.createElement(i,{name:\"CryptoDash\",img:\"./assets/imgs/Capture.PNG\",github:\" https://github.com/travis-john/dolla-dolla-bills\",deployed:\" https://travis-john.github.io/dolla-dolla-bills\"}))};Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));l.a.render(r.a.createElement(r.a.StrictMode,null,r.a.createElement(m,null)),document.getElementById(\"root\")),\"serviceWorker\"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()}).catch(function(e){console.error(e.message)})}],[[3,1,2]]]);","extractedComments":[]}